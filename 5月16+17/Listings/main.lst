C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2023 17:02:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

*** WARNING C500 IN LINE 1 OF main.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          #include <STC89C5xRC.H>
   2          
   3          #include "TCRT5000.h"
   4          #include "L298N.h"
   5          
   6          #define ONLY_GO 0
   7          #define GO 1
   8          #define STOP_W5S 2
   9          
  10          unsigned char stage = ONLY_GO;
  11          unsigned char start_stopline = 0;
  12          unsigned int start_protect = 1000;
  13          
  14          void Timer0Init(void)           //1毫秒@11.0592MHz
  15          {
  16   1              AUXR &= 0x7F;           //定时器时钟12T模式
  17   1              TMOD &= 0xF0;           //设置定时器模式
  18   1              TL0 = 0x66;             //设置定时初始值
  19   1              TH0 = 0xFC;             //设置定时初始值
  20   1              TF0 = 0;                //清除TF0标志
  21   1              
  22   1              ET0 = 1;
  23   1      }
  24          
  25          unsigned int t0cnt = 0;
  26          unsigned char t0ok = 0;
  27          void serviceTimer0() interrupt 1
  28          {
  29   1              
  30   1              if(t0cnt > 0){
  31   2                      t0cnt--;
  32   2              }
  33   1              else{
  34   2                      t0ok = 1;
  35   2                      TR0 = 0;
  36   2              }
  37   1                      
  38   1      }
  39          
  40          void t0start(unsigned int time){
  41   1              
  42   1              t0ok = 0;
  43   1              t0cnt = time;
  44   1              TR0 = 1;
  45   1              
  46   1      }
  47          
  48          
  49          void main()
  50          {
  51   1              
  52   1              unsigned char real_action;
  53   1              unsigned char backup_action;
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2023 17:02:03 PAGE 2   

  54   1              
  55   1              unsigned int real_pwm = 0;
  56   1      
  57   1              stage = ONLY_GO;
  58   1              
  59   1              Timer0Init();
  60   1              EA = 1;
  61   1              
  62   1              while (1)
  63   1              {
  64   2                      backup_action = real_action;
  65   2                      
  66   2                      if(stage == ONLY_GO){
  67   3                              start_protect--;
  68   3                      }
  69   2                      
  70   2                      if(!start_protect){
  71   3                              stage = GO;
  72   3                      }
  73   2                      
  74   2                      real_action = get_action();
  75   2                      
  76   2                      real_pwm = (real_pwm + 1) % 100;
  77   2                      
  78   2                      if (real_action == X){
  79   3                              
  80   3                              if (backup_action != X )
  81   3                                      start_stopline = (start_stopline + 1) % 2;
  82   3                              
  83   3                              if (start_stopline == 1 && stage == GO){
  84   4                                      
  85   4                                      t0start(20);
  86   4                                      
  87   4                                      left_side(1);
  88   4                                      right_side(1);
  89   4                                      
  90   4                                      while(!t0ok);
  91   4                                      
  92   4                                      t0start(550);
  93   4                                      
  94   4                                      right_side(120);
  95   4                                      left_side(120);
  96   4                                      
  97   4                                      while(!t0ok);
  98   4                                      
  99   4                                      stage = GO;
 100   4                                      continue;
 101   4                              }
 102   3                              else{
 103   4                                      t0start(3);
 104   4                                      right_side(1);
 105   4                                      left_side(1);
 106   4                                      
 107   4                                      while(!t0ok);
 108   4                                      continue;
 109   4                              }
 110   3                      }
 111   2                      
 112   2                      if (real_action == TURN_LEFT)
 113   2                      {
 114   3                              
 115   3                              if(real_pwm > 50)
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2023 17:02:03 PAGE 3   

 116   3                              {
 117   4                                      right_side(1);
 118   4                                      left_side(0);
 119   4                              }
 120   3                              else
 121   3                              {
 122   4                                      right_side(120);
 123   4                                      left_side(120);
 124   4                              }
 125   3                              continue;
 126   3                      }
 127   2                      
 128   2                      if (real_action == TURN_RIGHT)
 129   2                      {
 130   3                              if(real_pwm > 50)
 131   3                              {
 132   4                                      left_side(1);
 133   4                                      right_side(0);
 134   4                              }
 135   3                              else
 136   3                              {
 137   4                                      left_side(120);
 138   4                                      right_side(120);
 139   4                              }
 140   3                              continue;
 141   3                      }
 142   2                      
 143   2                      if (real_action == TURN_RIGHT_SMALL)
 144   2                      {
 145   3                              
 146   3                              if(real_pwm > 20)
 147   3                              {
 148   4                                      right_side(1);
 149   4                                      left_side(1);
 150   4                              }
 151   3                              else
 152   3                              {
 153   4                                      right_side(120);
 154   4                                      left_side(1);
 155   4                              }
 156   3                              continue;
 157   3                      }
 158   2                      
 159   2                      if (real_action == TURN_LEFT_SMALL)
 160   2                      {
 161   3                              if(real_pwm > 20)
 162   3                              {
 163   4                                      left_side(1);
 164   4                                      right_side(1);
 165   4                              }
 166   3                              else
 167   3                              {
 168   4                                      left_side(120);
 169   4                                      right_side(1);
 170   4                              }
 171   3                              continue;
 172   3                      }
 173   2                      
 174   2                      else if (real_action == GO_STR)
 175   2                      {
 176   3                              
 177   3                              left_side(1);
C51 COMPILER V9.60.0.0   MAIN                                                              05/17/2023 17:02:03 PAGE 4   

 178   3                              right_side(1);
 179   3                              continue;
 180   3                      }
 181   2              }
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    384    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
